@using Sporty.Common
@model Sporty.ViewModel.MaterialView
@{
    ViewBag.Title = "Material";
    if (!IsAjax)
    {
        Layout = "~/Views/Shared/_Site.cshtml";
    }
}

<link href="~/Content/fileuploader.css" rel="stylesheet" type="text/css">

<div id="dialog" title="Material">
    <div class="editForm span5">
        @using (Html.BeginForm("Edit", "Material", FormMethod.Post, new
                {
                    id = "DetailsForm",
                    @class = "form-horizontal",
                    name = "DetailsForm",
                    method = "post"
                }))
        {
            @Html.HiddenFor(model => model.Id)
            <div class="editDialog">
                <div class="page-header">
                    <h2>Einheit</h2>
                </div>
                <div class="control-group">
                    <input type="submit" id="save" name="save" value="Speichern" class="btn btn-primary" />
                    @Html.ActionLink("Abbrechen", "Index", "Material", null, new { @class = "btn btn-small" })
                    @if (!Model.IsNew)
                    {
                        @Html.ActionLink("Löschen", "Delete", "Material", new { Model.Id }, new { @class = "btn btn-small", @title = "Material löschen?", @id = "deleteButton" })
                    }
                </div>
                <div class="control-group">
                    <label for="Name" class="control-label">Name:</label>
                    <div class="controls">
                        @Html.TextBoxFor(model => model.Name, new { @class = "input-medium" })
                    </div>
                </div>
                <div class="control-group">
                    <label for="InUsage" class="control-label">In Gebrauch:</label>
                    <div class="controls">
                        @Html.CheckBoxFor(model => model.InUsage, new { @class = "input-small" })
                    </div>
                </div>
                <div class="control-group">
                    <label for="Lifetime" class="control-label">Lebenszeit (km):</label>
                    <div class="controls">
                        @Html.TextBoxFor(model => model.Lifetime, new { @class = "input-medium" })
                    </div>
                </div>
                <div class="control-group">
                    <label for="Image" class="control-label">Bild:</label>
                    <div class="controls">
                        <div id="materialImageContainer">
                            <img id="materialImage" src="@Url.Action("Image", "Material", new { id = Model.Id })" />
                            <div class="itemMenu">
                                <a id="deleteImageButton" href="@Url.Action("DeleteImage", new { id = Model.Id })" title="Bild löschen?">
                                    <img src="@Url.Content("~/Content/images/delete.png")" />
                                </a>
                            </div>
                        </div>
                        <div id="imageUpload"></div>
                    </div>
                </div>
                <div class="control-group">
                    <label for="Description" class="control-label">Beschreibung:</label>
                    <div class="controls">
                        @Html.TextAreaFor(model => model.Description, new { @class = "input-xxlarge" })
                    </div>
                </div>
                <div id="MaterialFormErrorSummary" name="MaterialFormErrorSummary" class="error">
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {
    <script src="~/Scripts/fileuploader.js" type="text/javascript"></script>

    <script type="text/javascript">
       @* action: '@Url.Action("ExerciseUpload", "Upload")',
            debug: true,
                *@

        $(document).ready(function () {
            var thumbnailuploader = new qq.FileUploader({
                action: '@Url.Action("ImageUpload", "Material", new { id = Model.Id })',
                element: $('#imageUpload')[0],
                multiple: false,
                //validation: {
                allowedExtensions: ['jpeg', 'jpg', 'png'],
                sizeLimit: 1048576, // 1MB
                //},
                onComplete: function (id, fileName, responseJSON) {
                    if (responseJSON.success) {
                        //randomnumber to "disable" cache
                        var randomnumber = Math.floor(Math.random() * 10000)
                        $('#materialImage').attr("src", "@Url.Action("Image", "Material", new { id = Model.Id })?tempId=" + randomnumber);
                    }
                }

            });

            $("#DetailsForm").validate({
                rules: {
                    Name: {
                        required: true
                    },
                    Lifetime: {
                        range: [0, 999999]
                    }
                },
                messages: {
                    Name: {
                        required: "*"
                    },
                    Lifetime: {
                        range: "*"
                    }
                },
                errorElement: "span",
                errorPlacement: function (error, element) {
                    error.addClass("help-inline");
                    element.siblings("label").append(error);
                },
                highlight: function (element) {
                    $(element).parents(".control-group").addClass("error");
                },
                unhighlight: function (element) {
                    $(element).parents(".control-group").removeClass("error");
                }
            });

            $("#deleteButton").on("click", function (e) {
                e.preventDefault();
                var $btn = $(this);
                var $msg = $(this).attr("title");

                bootbox.confirm($msg, function (result) {
                    if (result) {
                        deleteRow($btn, function () {
                            window.location.href = "@Url.Action("Index")";
                        });
                    }
                });
            });
            $("#deleteImageButton").on("click", function (e) {
                e.preventDefault();
                var $btn = $(this);
                var $msg = $(this).attr("title");
                $.ajax({
                    type: "POST",
                    url: $(this).attr("href"),
                    success: function (result) {
                        if (result) {
                            var randomnumber = Math.floor(Math.random() * 10000)
                            $('#materialImage').attr("src", "@Url.Action("Image", "Material", new { id = Model.Id })?tempId=" + randomnumber);
                        }
                    },
                    error: function (req, status, error) {
                        alert("Sorry! Leider gabs ein Problem.");
                    }
                });
            });
            $("#materialImageContainer").on("mouseover", function () {
                $(".itemMenu").show();
            })
           .on("mouseout", function () {
               $(".itemMenu").hide();
           });
        });
    </script>
}